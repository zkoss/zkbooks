<zk xmlns:n="native">
    <combobox>
        <comboitem label="Simple and Rich"/>
        <comboitem label="Cool!"/>
        <comboitem label="Ajax and RIA"/>
    </combobox>
    <zscript><![CDATA[
        ListModelList model = new ListModelList(Arrays.asList(new String[] { "David",
                "Thomas", "Steven" }));
        model.addToSelection(model.get(2));
    ]]></zscript>
    <n:h1>Default Selection</n:h1>
    <combobox model="${model}" />
    <combobox id="combobox" width="100px">
        <attribute name="onCreate"><![CDATA[
        List list2 = new ArrayList();
        list2.add("David");
        list2.add("Thomas");
        list2.add("Steven");
        ListModelList model2 = new ListModelList(list2);
        model2.addToSelection(model2.get(0));
        combobox.setModel(model2);
    ]]></attribute>
    </combobox>
    <n:h1>Selection only</n:h1>
    <combobox model="${model}" readonly="true"/>
<n:h1>
    Autocomplete
</n:h1>
    <n:h2>in a Brute-force Way</n:h2>
    <zscript><![CDATA[
public List getMatched(String value){
    List list = new LinkedList();
    for (String item : model){
        if (item.contains(value)){
            list.add(item);
        }
    }
    return list;
}
    ]]></zscript>
    <combobox model="${model}">
        <attribute name="onChanging"><![CDATA[
  self.getChildren().clear(); //remove all children
  for (String value: getMatched(event.getValue())){
    self.appendChild(new Comboitem(value));
  }
        ]]></attribute>
    </combobox>
    <n:h2>by ListSubModel</n:h2>
    <combobox apply="org.zkoss.reference.component.input.MyAutoCompleteComposer"/>

    <n:h2>value and selectedItem</n:h2>
    <div viewModel="@id('vm')@init('org.zkoss.reference.component.input.ComboboxVM')">
        <combobox value="@bind(vm.inputValue)" selectedItem="@bind(vm.selectedValue)" >
            <comboitem label="label 1" value="value1" />
            <comboitem label="label 2" value="value2" />
        </combobox>
        <n:div>
            combobox's value - <label value="@load(vm.inputValue)"/>
        </n:div>
        combobox's selectedItem - <label value="@load(vm.selectedValue)"/>
    </div>
    <n:h2>Avoid null selection</n:h2>
    <combobox id="box" onBlur="avoidNullSelection()">
        <comboitem label="Simple and Rich"/>
        <comboitem label="Cool!"/>
        <comboitem label="Ajax and RIA"/>
    </combobox>
    <button label="submit"/>
    <zscript><![CDATA[
public void avoidNullSelection(){
    if (box.getSelectedItem() == null){
        box.setFocus(true); // focus back to the combobox since the input value doesn't exist in the model
    }
}
    ]]></zscript>

    <n:h2>Enforce match</n:h2>
    <combobox use="org.zkoss.reference.component.input.EnforceMatchCombobox" model="${model}" />
</zk>